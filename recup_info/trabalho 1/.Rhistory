# Carregando as bibliotecas
library(tokenizers)
install.packages("tokenizers")
library(tokenizers)
library(dplyr)
install.packages("dplyr")
install.packages("udpipe")
install.packages("tidytext")
install.packages("tidyverse")
library(tokenizers)
library(dplyr)
library(udpipe)
library(tidytext)
library(tidyverse)
library(tokenizers)
library(dplyr)
library(udpipe)
library(tidytext)
library(tidyverse)
source("./ranking_metrics.R", encoding = "UTF-8")
source("./trabalho1_base.R", encoding = "UTF-8")
library(tokenizers)
library(dplyr)
library(udpipe)
library(tidytext)
library(tidyverse)
# Carregando os arquivos auxiliares
source("./ranking_metrics.R", encoding = "UTF-8")
source("./trabalho1_base.R", encoding = "UTF-8")
library(tokenizers)
library(dplyr)
library(udpipe)
library(tidytext)
library(tidyverse)
# Carregando os arquivos auxiliares
source("./ranking_metrics.R", encoding = "UTF-8")
source("./trabalho1_base.R", encoding = "UTF-8")
library(tokenizers)
library(dplyr)
library(udpipe)
library(tidytext)
library(tidyverse)
source("./ranking_metrics.R", encoding = "UTF-8")
source("./trabalho1_base.R", encoding = "UTF-8")
setw("C:\Users\ferna\Documents\aulas\01. Mineração de Dados Complexos - Unicamp\repo\recup_info\trabalho 1")
setw("C:/Users/ferna/Documents/aulas/01. Mineração de Dados Complexos - Unicamp/repo/recup_info/trabalho 1")
setw("C:\Users\ferna\Documents\aulas\01. Mineração de Dados Complexos - Unicamp\repo\recup_info\trabalho 1")
setwd("C:\\Users\\ferna\\Documents\\aulas\\01. Mineração de Dados Complexos - Unicamp\\repo\\recup_info\\trabalho 1")
docs <- process_data("time.txt", "XX-Text [[:alnum:]]", "Article_0",
convertcase = TRUE, remove_stopwords = FALSE)
head(docs)
queries <- process_data("queries.txt", "XX-Find [[:alnum:]]",
"Query_0", convertcase = TRUE,
remove_stopwords = FALSE)
head(queries)
q1 <- queries[queries$doc_id == "Query_01",]; q1
ground_truths <- read.csv("relevance.csv", header = TRUE)
head(ground_truths)
ground_truths[1,]
ground_truths[1,]
names(ground_truths)[ground_truths[1,]==1]
head(docs_stats)
# Computando as estatísticas da coleção e convertendo em data.frame
docs_stats <- as.data.frame(document_term_frequencies_statistics(...))
head(ground_truths)
head(queries)
head(docs)
term_freq <- document_term_frequencies(docs, term="word")
term_freq
docs_stats <- as.data.frame(document_term_frequencies_statistics(term_freq,
k=1.2,
b=0.75))
head(docs_stats)
r <- recall(ground_truth,
ranking$doc_id,
top)
